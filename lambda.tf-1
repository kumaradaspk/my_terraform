resource "aws_iam_role" "kumaradas-73721-poc-ebs-snapshots-role" {
  name = "kumaradas-73721-poc-ebs-snapshots-role"
  path = "/"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": "lambda.amazonaws.com"
      },
      "Effect": "Allow",
      "Sid": ""
    }
  ]
}
EOF

  tags {
    Name = "kumaradas-73721-poc-ebs-snapshots-role"
  }
}

resource "aws_iam_policy" "kumaradas-73721-poc-ebs-snapshots-policy" {
  name        = "kumaradas-73721-poc-ebs-snapshots-policy"
  path        = "/"
  description = "kumaradas-73721-poc-ebs-snapshots-policy"

  policy = <<EOF
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "logs:*"
            ],
            "Resource": "arn:aws:logs:*:*:*"
        },
        {
            "Effect": "Allow",
            "Action": "ec2:Describe*",
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:CreateSnapshot",
                "ec2:DeleteSnapshot",
                "ec2:CreateTags",
                "ec2:ModifySnapshotAttribute",
                "ec2:ResetSnapshotAttribute"
            ],
            "Resource": [
                "*"
            ]
        }
    ]
}
EOF
}

resource "aws_iam_role_policy_attachment" "kumaradas-73721-poc" {
  role       = "${aws_iam_role.kumaradas-73721-poc-ebs-snapshots-role.name}"
  policy_arn = "${aws_iam_policy.kumaradas-73721-poc-ebs-snapshots-policy.arn}"
}

resource "aws_lambda_function" "kumaradas_73721_ebs_volume_backup_ebs-create-snapshots" {
  filename      = "ebs-create-snapshots.zip"
  function_name = "ebs-create-snapshots"
  role          = "${aws_iam_role.kumaradas-73721-poc-ebs-snapshots-role.arn}"
  handler       = "lambda_function.lambda_handler"
  runtime       = "python2.7"
}

resource "aws_lambda_function" "kumaradas_73721_ebs_volume_backup_ebs-delete-snapshots" {
  filename      = "ebs-delete-snapshots.zip"
  function_name = "ebs-delete-snapshots"
  role          = "${aws_iam_role.kumaradas-73721-poc-ebs-snapshots-role.arn}"
  handler       = "lambda_function.lambda_handler"
  runtime       = "python2.7"
}

resource "aws_cloudwatch_event_rule" "kumaradas-ebs-snapshot-schedule" {
  name                = "kumaradas-ebs-snapshot-schedule"
  description         = "Daily snapshot schedule"
  schedule_expression = "cron(0 23 ? * MON-FRI *)"
}

resource "aws_cloudwatch_event_target" "ebs-create-snapshots" {
  rule = "${aws_cloudwatch_event_rule.kumaradas-ebs-snapshot-schedule.name}"
  arn  = "${aws_lambda_function.kumaradas_73721_ebs_volume_backup_ebs-create-snapshots.arn}"
}

resource "aws_cloudwatch_event_target" "ebs-delete-snapshots" {
  rule = "${aws_cloudwatch_event_rule.kumaradas-ebs-snapshot-schedule.name}"
  arn  = "${aws_lambda_function.kumaradas_73721_ebs_volume_backup_ebs-delete-snapshots.arn}"
}

resource "aws_lambda_permission" "allow_cloudwatch_ebs-delete-snapshots" {
  statement_id  = "AllowExecutionFromCloudWatch"
  action        = "lambda:InvokeFunction"
  function_name = "${aws_lambda_function.kumaradas_73721_ebs_volume_backup_ebs-delete-snapshots.function_name}"
  principal     = "events.amazonaws.com"
  source_arn    = "${aws_cloudwatch_event_rule.kumaradas-ebs-snapshot-schedule.arn}"
}

resource "aws_lambda_permission" "allow_cloudwatch_ebs-create-snapshots" {
  statement_id  = "AllowExecutionFromCloudWatch"
  action        = "lambda:InvokeFunction"
  function_name = "${aws_lambda_function.kumaradas_73721_ebs_volume_backup_ebs-create-snapshots.function_name}"
  principal     = "events.amazonaws.com"
  source_arn    = "${aws_cloudwatch_event_rule.kumaradas-ebs-snapshot-schedule.arn}"
}
